<?xml version="1.0" encoding="utf-8"?>
<!--
     This configuration file is required if iisnode is used to run node processes behind
     IIS or IIS Express.  For more information, visit:

     https://github.com/tjanczuk/iisnode/blob/master/src/samples/configuration/web.config
-->

<configuration>
  <system.webServer>
    <!-- Visit https://azure.microsoft.com/en-us/blog/introduction-to-websockets-on-windows-azure-web-sites/ for more information on WebSocket support -->
    <handlers>
      <!-- Indicates that the server.js file is a Node.js site to be handled by the iisnode module -->
      <add name="iisnode" path="server" verb="*" modules="iisnode"/>
      <!-- <add name="iisnode" path="*.js" verb="*" modules="iisnode" resourceType="File" /> -->
      <remove name="ASPClassic" />
    </handlers>
    <rewrite>
      <rules>
        <rule name="HTTP to Prod HTTPS redirect" stopProcessing="false">
          <match url="(.*)" />
          <conditions>
            <add input="{HTTPS}" pattern="off" ignoreCase="true" />
          </conditions>
          <!-- <action type="Redirect" redirectType="Found" url="http://{HTTP_HOST}/{R:1}" /> -->
          <!-- <action type="Redirect" redirectType="Found" url="https://{HTTP_HOST}/{R:1}" /> -->
        </rule>
        <!-- Don't interfere with requests for logs -->
        <rule name="LogFile" patternSyntax="ECMAScript" stopProcessing="true">
          <match url="^[a-zA-Z0-9_\-]+\.js\.logs\/\d+\.txt$" />
        </rule>
        <!-- Do not interfere with requests for node-inspector debugging -->
        <rule name="NodeInspector" patternSyntax="ECMAScript" stopProcessing="true">
          <match url="^server\/debug[\/]?" />
        </rule>

        <!-- First we consider whether the incoming URL matches a physical file in the /public folder -->
        <rule name="StaticContent">
          <action type="Rewrite" url="public{REQUEST_URI}"/>
        </rule>

        <!-- All other URLs are mapped to the Node.js site entry point -->
        <rule name="DynamicContent">
          <conditions>
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True"/>
          </conditions>
          <action type="Rewrite" url="server"/>
        </rule>
      </rules>
    </rewrite>

    <!-- 'bin' directory has no special meaning in Node.js and apps can be placed in it -->
    <security>
      <requestFiltering>
        <requestLimits maxQueryString="32768"></requestLimits>
        <hiddenSegments>
          <remove segment="bin"/>
 	        <!-- <add segment="node_modules" /> -->
        </hiddenSegments>
      </requestFiltering>
    </security>
    <httpErrors existingResponse="PassThrough" />
    <!-- Make sure error responses are left untouched -->
    <!-- <httpErrors existingResponse="PassThrough" /> -->
	  <!-- <iisnode node_env="production" nodeProcessCommandLine="C:\Program Files\nodejs\node.exe"/> -->
    <iisnode 
            watchedFiles="web.config;*.js;node_modules\*;routes\*.js;views\*.jade" 
            node_env="%node_env%" 
            loggingEnabled="true" 
            logDirectory="iisnode" 
            debuggingEnabled="true" 
            maxLogFileSizeInKB="1048" 
            maxLogFiles="50" 
            devErrorsEnabled="true" 
            nodeProcessCommandLine="C:\Program Files\nodejs\node.exe"/>
    <!--
      You can control how Node is hosted within IIS using the following options:
        * watchedFiles: semi-colon separated list of files that will be watched for changes to restart the server
        * node_env: will be propagated to node as NODE_ENV environment variable
        * debuggingEnabled - controls whether the built-in debugger is enabled

      See https://github.com/tjanczuk/iisnode/blob/master/src/samples/configuration/web.config for a full list of options
    -->
    <!--<iisnode watchedFiles="web.config;*.js"/>-->
    <modules runAllManagedModulesForAllRequests="false">
      <!-- <remove name="TelemetryCorrelationHttpModule" />
      <remove name="ApplicationInsightsWebTracking" />
      <remove name="RequestAnalyzer" /> -->
    </modules>
  </system.webServer>
  <system.web>
    <httpRuntime maxRequestLength="51200" maxQueryStringLength="32768" maxUrlLength="65536"/>
  </system.web>
  <appSettings>
    <add key="ServerMode" value="dev"></add>
    <add key="NODE_ENV" value="development"></add>
  </appSettings>
</configuration>